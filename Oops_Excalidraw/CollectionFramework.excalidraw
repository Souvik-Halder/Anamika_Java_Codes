{
  "type": "excalidraw",
  "version": 2,
  "source": "https://excalidraw.com",
  "elements": [
    {
      "id": "HLKZcIiB2_-uHzoGozkhl",
      "type": "rectangle",
      "x": -510.48259226481173,
      "y": -83.60715041394769,
      "width": 1734.999938964844,
      "height": 810.0000508626304,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "b2W",
      "roundness": {
        "type": 3
      },
      "seed": 898911817,
      "version": 199,
      "versionNonce": 2091639726,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1740597381381,
      "link": null,
      "locked": false
    },
    {
      "id": "z4WwNwBnmdVB5K4CnOsEj",
      "type": "text",
      "x": -173.815925598145,
      "y": -138.05160333549716,
      "width": 237.67537597649104,
      "height": 29.44445292154947,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "b2X",
      "roundness": null,
      "seed": 1429446921,
      "version": 62,
      "versionNonce": 1758299689,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1740596237835,
      "link": null,
      "locked": false,
      "text": "Collection Framework",
      "fontSize": 23.55556233723957,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Collection Framework",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "dM3NzFbUMLqi31G58VU_z",
      "type": "text",
      "x": -469.21267591204,
      "y": -15.829389590379947,
      "width": 1571.72607421875,
      "height": 625,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "b2Y",
      "roundness": null,
      "seed": 1705328423,
      "version": 1239,
      "versionNonce": 355522226,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1740597416716,
      "link": null,
      "locked": false,
      "text": "Dynamic Array , LinkedList , Set , Map \n\nDynamic Array \n    \n\n    ArrayList<String> arr = new ArrayList<>();\n    ArrayList<Integer> arr1 = new ArrayList<>();\n    Array Size -> arr.size();\n    Array Insert Element -> arr.add(\"hello\");\n    Array Get element -> arr.get(index);\n    Array List empty or not -> arr.isEmpty()\n    Array Remove Element -> arr.remove(index)\n    Sort an array -> Collections.sort(arr); \n    Sort an array in reverse order -> Collections.sort(arr, Collections.reverseOrder());\n    \n    HashMap -> Here data stored in {key:value} pair\n\n        HashMap<Integer,String> map =new HashMap<>();\n        \n        To insert a value -> map.put(1,\"Souvik\");\n        To remove a value -> map.remove(key); -> map.remove(1)\n        To get a value -> map.get(key) -> map.get(1)\n        To get a value and if not present give the default value -> map.getOrDefault(key,valueWhichItReturn) -> map.getOrDegault(2,null);\n        \n       ",
      "fontSize": 20,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Dynamic Array , LinkedList , Set , Map \n\nDynamic Array \n    \n\n    ArrayList<String> arr = new ArrayList<>();\n    ArrayList<Integer> arr1 = new ArrayList<>();\n    Array Size -> arr.size();\n    Array Insert Element -> arr.add(\"hello\");\n    Array Get element -> arr.get(index);\n    Array List empty or not -> arr.isEmpty()\n    Array Remove Element -> arr.remove(index)\n    Sort an array -> Collections.sort(arr); \n    Sort an array in reverse order -> Collections.sort(arr, Collections.reverseOrder());\n    \n    HashMap -> Here data stored in {key:value} pair\n\n        HashMap<Integer,String> map =new HashMap<>();\n        \n        To insert a value -> map.put(1,\"Souvik\");\n        To remove a value -> map.remove(key); -> map.remove(1)\n        To get a value -> map.get(key) -> map.get(1)\n        To get a value and if not present give the default value -> map.getOrDefault(key,valueWhichItReturn) -> map.getOrDegault(2,null);\n        \n       ",
      "autoResize": false,
      "lineHeight": 1.25
    }
  ],
  "appState": {
    "gridSize": 20,
    "gridStep": 5,
    "gridModeEnabled": false,
    "viewBackgroundColor": "#ffffff"
  },
  "files": {}
}